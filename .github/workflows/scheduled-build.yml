name: Scheduled Build if Main Changes

on:
  workflow_dispatch:
  schedule:
    - cron: '30 10 * * *'

jobs:
        
  check-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Get Previous Run ID
      id: get_run
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        # Fetch workflow runs using the GitHub API
        response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/scheduled-build.yml/runs?status=completed&per_page=2")
        
        # Extract the second latest run ID (previous run)
        previous_run_id=$(echo "$response" | jq -r '.workflow_runs[1].id')
        
        if [ "$previous_run_id" == "null" ]; then
          echo "No previous run found. Exiting."
          exit 1
        fi

        echo "Previous Run ID: $previous_run_id"
        echo "run_id=$previous_run_id" >> $GITHUB_OUTPUT
        
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download previous commit state
      uses: actions/download-artifact@v4
      with:
        name:
        path: .
        github-token: ${{ secrets.GH_PAT }}
        run-id: ${{ steps.get_run.outputs.run_id }}
      continue-on-error: true  # Proceed even if the artifact is missing

    - name: Ensure previous commit exists
      run: |
        # Check if the artifact file exists in the subdirectory
        if [ ! -f last-successful-commit/.last-successful-commit ]; then
          echo "No previous commit found, creating fallback."
          echo "" > .last-successful-commit
        else
          # Move the artifact file to the root directory
          mv last-successful-commit/.last-successful-commit .last-successful-commit
        fi
    - name: Compare commits
      id: check_changes
      run: |
        PREVIOUS_COMMIT=$(cat .last-successful-commit)
        LATEST_COMMIT=$(git rev-parse origin/main)

        echo "Previous commit: $PREVIOUS_COMMIT"
        echo "Latest commit: $LATEST_COMMIT"

        if [ "$PREVIOUS_COMMIT" = "$LATEST_COMMIT" ]; then
          echo "build_needed=false" >> $GITHUB_OUTPUT
        else
          echo "build_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Set build needed for manual triggers
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "Manual trigger detected. Forcing build."
        echo "build_needed=true" >> $GITHUB_OUTPUT

    - name: Run Build
      if: steps.check_changes.outputs.build_needed == 'true'
      run: |
        echo "Running build process..."
        echo "$(git rev-parse origin/main)" > .last-successful-commit

    - name: Upload commit state
      uses: actions/upload-artifact@v4
      with:
        name: last-successful-commit
        path: .last-successful-commit        
        include-hidden-files: true

