name: Scheduled Build if Main Changes

on:
  workflow_dispatch:
  schedule:
    # Runs every 5 minutes for testing
    - cron: '*/5 * * * *'

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Get the latest commit hash of main
    - name: Get latest commit on main
      id: get_latest_commit
      run: echo "latest_commit=$(git rev-parse origin/main)" >> $GITHUB_OUTPUT

    # Step 3: Compare commit hashes and create fallback if necessary
    - name: Check if main has new commits
      id: check_changes
      run: |
        # Ensure the .last-successful-commit file exists
        if [ ! -f .last-successful-commit ]; then
          echo "No previous commit found, creating fallback."
          echo "" > .last-successful-commit
        fi

        PREVIOUS_COMMIT=$(cat .last-successful-commit)
        LATEST_COMMIT="${{ steps.get_latest_commit.outputs.latest_commit }}"

        echo "Previous commit: $PREVIOUS_COMMIT"
        echo "Latest commit: $LATEST_COMMIT"

        if [ "$PREVIOUS_COMMIT" = "$LATEST_COMMIT" ]; then
          echo "build_needed=false" >> $GITHUB_OUTPUT
        else
          echo "build_needed=true" >> $GITHUB_OUTPUT
        fi

    # Step 4: Run the build if needed
    - name: Run Build
      if: steps.check_changes.outputs.build_needed == 'true'
      run: |
        echo "Running build process..."
        # Your build commands go here

        # Save the commit hash for the next run
        echo "${{ steps.get_latest_commit.outputs.latest_commit }}" > .last-successful-commit

    # Step 5: Conditionally upload .last-successful-commit
    - name: Upload commit state
      if: steps.check_changes.outputs.build_needed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: last-successful-commit
        path: .last-successful-commit
        include-hidden-files: true

