name: Scheduled Build if Main Changes

on:
  workflow_dispatch:
  schedule:
    - cron: '05 * * * *'

jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      build_needed: ${{ steps.check_changes.outputs.build_needed }}

    steps:
    - name: Get Previous Workflow Run
      id: get_previous_run
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=completed&per_page=1")
        run_id=$(echo "$response" | jq -r '.workflow_runs[0].id')

        if [ "$run_id" == "null" ]; then
          echo "No previous run found. Exiting."
          echo "previous_run_id=" >> $GITHUB_OUTPUT
        else
          echo "Found previous run ID: $run_id"
          echo "previous_run_id=$run_id" >> $GITHUB_OUTPUT
        fi

    - name: Download Previous Commit State
      if: ${{ steps.get_previous_run.outputs.previous_run_id }}
      uses: actions/download-artifact@v4
      with:
        name: last-successful-commit
        path: .
        run-id: ${{ steps.get_previous_run.outputs.previous_run_id }}
      continue-on-error: true

    - name: Get Previous Commit
      id: previous_commit
      run: |
        if [ -f .last-successful-commit ]; then
          PREVIOUS_COMMIT=$(cat .last-successful-commit)
        else
          PREVIOUS_COMMIT=""
        fi
        echo "Previous Commit: $PREVIOUS_COMMIT"
        echo "previous_commit=$PREVIOUS_COMMIT" >> $GITHUB_OUTPUT

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Compare Commits
      id: check_changes
      run: |
        LATEST_COMMIT=$(git rev-parse origin/main)
        echo "Latest Commit: $LATEST_COMMIT"

        if [ "${{ steps.previous_commit.outputs.previous_commit }}" = "$LATEST_COMMIT" ]; then
          echo "No changes detected. Skipping build."
          echo "build_needed=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected. Build needed."
          echo "build_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Override for Manual Triggers
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "Manual trigger detected. Forcing build."
        echo "build_needed=true" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.build_needed == 'true'

    steps:
    - name: Run Build
      run: |
        echo "Running build process..."
        # Your build logic here

  save-state:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: needs.check.outputs.build_needed == 'true'

    steps:
    - name: Save Last Commit State
      run: |
        echo "$(git rev-parse origin/main)" > .last-successful-commit

    - name: Upload Commit State
      uses: actions/upload-artifact@v4
      with:
        name: last-successful-commit
        path: .last-successful-commit

